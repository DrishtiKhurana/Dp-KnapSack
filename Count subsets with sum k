import java.util.*;
import java.io.*;

public class Solution {
    public static int findWays(int num[], int tar) {
        // Write your code here.
        return perfectSum(num,num.length,tar);
    }

    static int mod=1000000007;
  public static int perfectSum(int arr[], int n, int sum) {
        int[][] dp = new int[n + 1][sum + 1];
       dp[0][0]=1;
       //as subset can contain 0 value so for [0] -> count is 2 -?{},{0}

        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= sum; j++) {
                if (arr[i - 1] <= j) {
                    dp[i][j] = (dp[i - 1][j - arr[i - 1]] + dp[i - 1][j])%mod;  ;
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }

        return dp[n][sum]%mod;
    }

}
