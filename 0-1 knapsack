 static int knapSack(int W, int weight[], int value[], int n) 
    { 
          int N=n;
           int[][]dp=new int[N+1][W+1];
        
        for(int i=1;i<dp.length;i++){
            
            for(int j=1;j<dp[0].length;j++){
                
                if(j>=weight[i-1]){ //if it is less take max of include & not include
                    dp[i][j]=Math.max(value[i-1]+dp[i-1][j-weight[i-1]],dp[i-1][j]);
                }
                else{ //not include if n is greater
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[N][W];
    } 
