//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
class GfG
{
    public static void main(String args[])
        {
            Scanner sc = new Scanner(System.in);
            int t = sc.nextInt();
            while(t-->0)
                {
                    int n = sc.nextInt();
                    int w = sc.nextInt();
                    int cost[] = new int[n];
                    for(int i = 0;i<n;i++)
                        cost[i] = sc.nextInt();
                    Solution ob = new Solution();
                    System.out.println(ob.minimumCost(cost,n,w));
                }
        }
}    
// } Driver Code Ends


class Solution
{
	public int minimumCost(int cost[], int N,int W)
	{
	     
         
           int[][]dp=new int[N+1][W+1];
           int[]weight=new int[cost.length];
           for (int i = 0; i < weight.length; i++) {
            weight[i] = i+1;
        }
        for (int i = 0; i <N+1; i++) {
            dp[i][0]=0;
        }
         for (int j = 1;j<W+1; j++) {
            dp[0][j]=100000000;
        }
        
        for(int i=1;i<dp.length;i++){
            
            for(int j=1;j<dp[0].length;j++){
                
                if(j>=weight[i-1] && cost[i-1]!=-1){ //if it is less take max of include & not include
                    dp[i][j]=Math.min(cost[i-1]+dp[i][j-weight[i-1]],dp[i-1][j]);
                }
                else{ //not include if n is greater
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[N][W]==100000000?-1:dp[N][W];
     
	}
	
	
}
